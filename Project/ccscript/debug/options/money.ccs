// Money Edit debug menu option

import "../../essential/ccscript_missing_commands.ccs"
import "../../essential/commands.ccs"
import "../../essential/flags.ccs"
import "../../debug/diamond.ccs"
import "../../essential/asm65816.ccs"

//------------------------------------------------------------------

Money_Edit:
// TODO: Surely there's a simpler way to do all of this by directly writing values to the memory via ASM?
// Maybe ask Catador at some point in the future, or if this doesn't work. --livvy
    open_wallet
    window_open(53)
    diam "Choose your operation." newline
    save_text_window_state
    window_open(7)
    menu 1 {
      "Max bank account": {
        call(Money_Select)
        diam "You now have $9999999" linebreak
        "   in the bank." wait
        counter(1)
        goto(Work_A_Shift)
      }
      "Max cash": {
        call(Money_Select)
        diam "You now have $99999" linebreak
        "   in your wallet." wait
        "[1D 08 60 EA]"	// Increase wallet by 60 EA
        "[1D 08 40 9C]"	// Increase wallet by 40 9C
        window_closetop
        goto(new_debug_menu.debug_main)
      }
      "Cash edit": {
        call(Money_Select)
        diam "Input your amount:" linebreak
        text_pos(4, 10)"&"
        text_pos(4, 2)"$"
        number_input(5)
        clearline
        goto_if_false(new_debug_menu.debug_main)
        store_registers
        call(Take_All_Money)
        load_registers
        swap
        givemoney(0)
        diam "You now have" linebreak
        "   ${print_num_value(0)} in your wallet." wait
        window_closetop
        goto(new_debug_menu.debug_main)
      }
      "Empty cash": {
        goto(Money_Broke)
      }
    }
    window_closetop
    goto(new_debug_menu.debug_main)

Money_Select:
    copy_wram
    window_closetop
    window_switch(53)
    copy_active
    newline
    eob

//------------------------------------------------------------------

// Helper methods
Take_All_Money:
    "[1D 09 10 27]"	// Decrease Wallet Balance by [10 27]
    goto_if_false(Take_All_Money)
    goto(Take_All_Money_2)

Take_All_Money_2:
    "[1D 09 E8 03]"
    goto_if_false(Take_All_Money_2)
    goto(Take_All_Money_3)

Take_All_Money_3:
    "[1D 09 64 00]"
    goto_if_false(Take_All_Money_3)
    goto(Take_All_Money_4)

Take_All_Money_4:
    "[1D 09 0A 00]"
    goto_if_false(Take_All_Money_4)
    goto(Take_All_Money_5)

Take_All_Money_5:
    "[1D 09 01 00]"
    goto_if_false(Take_All_Money_5)
    eob		//goto(Take_All_Money_End)

Money_Broke:
    call(Take_All_Money)
    window_closetop
    window_switch(53)
    diam "You are now broke!" linebreak
    "   Your wallet is empty!" wait
    window_closetop
    goto(new_debug_menu.debug_main)

Work_A_Shift:	// This loop adds money to the ATM until it hits a certain amount
    ctoarg
    swap
    if result_is(200) {
      goto(Vacation_Time)
    }
    "[1D 06 50 C3 00 00]"	// Increase ATM balance by 50C30000 I guess?
    inc
    goto(Work_A_Shift)

Vacation_Time:
    "[1D 06 4F C3 00 00]"	// Increase balance one last time. Now we rest and recharge
    window_closetop
    goto(new_debug_menu.debug_main)

command money_edit_post_selection {
    copy_wram
    window_closetop
    window_switch(53)
    copy_active
    newline
}

//------------------------------------
